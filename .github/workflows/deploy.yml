name: deploy

"on":
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Alpine
        uses: jirutka/setup-alpine@v1
        with:
          branch: "v3.18"
          packages: >
            openssh
            ansible-core
            ansible-lint
            python3
            py3-pip

      - name: Setup SSH Key
        env:
          SSH_PRIVATE_KEY: ${{ inputs.DEPLOY_SSH_KEY }}
          HOST: ${{ inputs.host }}

      - name: Verify Alpine Release
        run: cat /etc/alpine-release
        shell: alpine.sh {0}

      - name: Download Ansible community.general and ansible.posix libraries
        shell: alpine.sh --root {0}
        working-directory: /home/runner/work/vps-playbook/vps-playbook/
        run: |
          python3 --version
          ansible-galaxy collection install -r requirements.yml -vvv

      - name: Run ansible-lint
        shell: alpine.sh --root {0}
        working-directory: /home/runner/work/vps-playbook/vps-playbook/
        env:
          ANSIBLE_LOCAL_TEMP: /tmp
        run: |
          ansible-lint

      - name: Cache ssh key passphrase & Run Ansible Playbook
        env:
          AUTHORIZED_KEYS_USER: ${{ secrets.AUTHORIZED_KEYS_USER }}
          AUTHORIZED_KEYS_DEPLOYER: ${{ secrets.AUTHORIZED_KEYS_DEPLOYER }}
          SSH_PASSPHRASE: ${{ secrets.DEPLOY_SSH_PASSPHRASE }}
          USER: ${{ secrets.USER }}
          VPS_IP: ${{ secrets.VPS_IP }}
        shell: alpine.sh --root {0}
        run: |
          eval "$(ssh-agent -s)"
          echo -e '#!/bin/sh\necho "$SSH_PASSPHRASE"' > ./askpass.sh
          chmod +x ./askpass.sh
          export SSH_ASKPASS=./askpass.sh
          export DISPLAY=:0
          setsid ssh-add /home/runner/.ssh/id_rsa < /dev/null
          ansible-playbook -i inventory.yml -vvv main.yml
